<apex:page showHeader="false" title="SOQL Query Generator" controller="SOQLQueryGeneratorCtrl" standardStylesheets="false" sidebar="false" docType="html-5.0" applyHtmlTag="false" applyBodyTag="false">
    <html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"/>  
    <head>
        <apex:stylesheet value="{!URLFOR($Resource.SLDS0121,'/assets/styles/salesforce-lightning-design-system-vf.css')}"/>
        <c:ExternalLibraries />
        <style type="text/css">
        	.sortable-placeholder{
        		background-color : #F4F6F9;
        	}

        	li:hover{
        		cursor: pointer;
        	}
        </style>
    </head>

    <body ng-app="queryGenerator" ng-controller="queryGeneratorCtrl" class="container">
        <div class="slds">                  
            <div class="slds-grid">
            	<div class="container">
            		<div class="slds-form-element">
						<label class="slds-form-element__label" for="sample2">Generated Query</label>
				  		<div class="slds-form-element__control">
				    		<textarea ng-model="finalQuery" class="slds-textarea" placeholder="You can edit query !"></textarea>
				  		</div>
					</div>

					<div class="slds-tabs--scoped">
		                <ul class="slds-tabs--scoped__nav" role="tablist">
		                    <li class="slds-tabs--scoped__item slds-text-heading--label slds-active active" title="Item One" role="presentation" data-toggle="tab">
		                        <a class="slds-tabs--scoped__link" href="#" onclick="selTab(this);" role="tab" tabindex="0" aria-selected="true" aria-controls="tab-scoped-1" id="tab-scoped-1__item">
		                            Select Objects and Fields
		                        </a>
		                    </li>
		                    <li class="slds-tabs--scoped__item slds-text-heading--label" title="Item Two" role="presentation" data-toggle="tab">
		                        <a class="slds-tabs--scoped__link" href="#" role="tab" onclick="selTab(this);" tabindex="-1" aria-selected="false" aria-controls="tab-scoped-2" id="tab-scoped-2__item">
		                            Add "WHERE" clause
		                        </a>
		                    </li>
		                    <li class="slds-tabs--scoped__item slds-text-heading--label" title="Item Three" role="presentation" data-toggle="tab">
		                        <a class="slds-tabs--scoped__link"  href="#" role="tab" onclick="selTab(this);" tabindex="-1" aria-selected="false" aria-controls="tab-scoped-3" id="tab-scoped-3__item">
		                            Add "ORDER" and "LIMIT" clause
		                        </a>
		                    </li>
		                </ul>                     
		                <div id="tab-scoped-1" class="slds-tabs--scoped__content slds-show" role="tabpanel" aria-labelledby="tab-scoped-1__item" >                	                	
		        			<div class="slds-grid slds-grid--align-spread">
		                		<div class="slds-col--padded" style="width: 150%;" >
		                			<div class="slds-scrollable--x">
		                				<div class="slds-text-heading--small">
		                					Available Objects
		                				</div>		                				
					                    <div style="margin-top:15px;">
					                    	<ul id="sortable1" class="slds-scrollable--y slds-list--vertical slds-has-cards--space connectSortable"  style="overflow-y:auto;height:500px">
					                    		<li ng-id="{{object.ObjectApiName}}" class="slds-list__item" ng-repeat="object in AvailableObjectsList" ng-if="	object.isCreateable == true && object.isUpdateable == true && object.isQueryable == true" style="width:auto;margin-right:10px;">
					                    			{{object.ObjectLabel}}
					                    		</li>
					                    	</ul>
					                    </div>					                    
		                			</div>                			 
		                		</div>  
		                		<div class="slds-col--padded" style="width: 150%;">                			
		                			<div class="slds-scrollable--x">
		                				<div class="slds-text-heading--small">
		                					Selected Objects
		                				</div>		                				
					                    <div style="margin-top:15px;">
					                    	<ul id="sortable2" class="slds-scrollable--y slds-list--vertical slds-has-cards--space connectSortable"  style="overflow-y:auto;height:500px">
					                    		<li ng-click="showFields(object)" class="slds-list__item" ng-repeat="object in 	SelectedObjectsList" style="width:auto;margin-right:10px;">
					                    			{{object.ObjectLabel}}
					                    		</li>
					                    	</ul>
					                    </div>					                    
		                			</div>               			 
		                		</div>
		                		<div class="slds-col--padded" style="width: 150%;">                					                				
				                  	<div class="slds-scrollable--x">
		                				<div class="slds-text-heading--small">
		                					Fields
		                				</div>		                				
					                    <div style="margin-top:15px;">
					                    	<ul class="slds-scrollable--y slds-list--vertical slds-has-cards--space connectSortable"  style="overflow-y:auto;height:500px">
					                    		<li ng-class="{'slds-box slds-theme--inverse' : fieldsChecked[field.fieldApiName] == true}" class="slds-list__item" ng-click="toggleSelected(this)" ng-repeat="field in FieldList" style="width:auto;margin-right:10px;">					                    			
					                    			{{field.fieldLabel}}
					                    			<!--<label class="slds-checkbox pull-right">
										          		<input name="checkbox" type="checkbox" ng-model="fieldsChecked[field.fieldApiName]" ng-change="updateQuery(this)"/>
										          		<span class="slds-checkbox--faux"></span>
										          		<span class="slds-form-element__label slds-assistive-text">select</span>
										        	</label>-->
					                    		</li>
					                    	</ul>
					                    </div>					                    
	                				</div>		                			         			
		                		</div>	                		                 		       
		                	</div>                		                	               	                	                  
		                </div>
		                <div id="tab-scoped-2" class="slds-tabs--scoped__content slds-hide" role="tabpanel" aria-labelledby="tab-scoped-2__item">
		                    <h2>Item Two Content</h2>
		                </div>
		                <div id="tab-scoped-3" class="slds-tabs--scoped__content slds-hide" role="tabpanel" aria-labelledby="tab-scoped-3__item">
		                    <h2>Item Three Content</h2>
		                </div>                          
		            </div>
            	</div>
            </div>                                  
        </div>
        <script type="text/javascript">
            var j$ = jQuery.noConflict();
            var queryGeneratorApp = angular.module('queryGenerator',[]);
            var queryGeneratorCtrl = queryGeneratorApp.controller('queryGeneratorCtrl',['$scope','$q',function($scope,$q){   
            	$scope.AvailableObjectsList = [];
            	$scope.SelectedObjectsList = [];
            	$scope.FieldList = [];
            	$scope.fieldsChecked = {};   
            	$scope.finalQuery = ""; 
            	$scope.fieldsInQuery = "";     
            	$scope.isFieldChecked = [];   	
            	var selectedObjList = {};
            	$scope.addRemoveField = function(fieldInfo){
            		console.log('field------->>>',fieldInfo.field);            		
            	};

            	$scope.toggleSelected = function(fieldInfo){
            		$scope.fieldApiName = fieldInfo.field.fieldApiName;
            		$scope.fieldApiName = $scope.fieldApiName.trim();
            		$scope.fieldsInQuery = "";
            		for (var key in $scope.fieldsChecked) {
					 	if ($scope.fieldsChecked.hasOwnProperty(key)) {
					    	console.log(key + " ----> " + $scope.fieldsChecked[key]);					    	
					    	if($scope.fieldApiName == key){
					    		console.log(key + "before ----> " + $scope.fieldsChecked[key]);
					    		$scope.fieldsChecked[key] = !($scope.fieldsChecked[key]);
					    		console.log(key + "after ----> " + $scope.fieldsChecked[key]);
					    	}
					    	if($scope.fieldsChecked[key] == true){					    		
					    		$scope.fieldsInQuery += key + ","; 
					    	}
					  	}
					}
					$scope.fieldsInQuery = $scope.fieldsInQuery.substring(0,$scope.fieldsInQuery.length-1);
					console.log('fieldsInQuery after----------->>>',$scope.fieldsInQuery);
					if($scope.fieldsInQuery == ""){
						$scope.finalQuery = "";
					}else{
						$scope.finalQuery = "SELECT "+$scope.fieldsInQuery + " FROM " + $scope.objectName;	
					}

            	}            

            	$scope.showFields = function(selectedObject){
            		console.log('selectedObject----->>>>'+selectedObject);
            		$scope.objects = selectedObject.ObjectApiName;
            		var deferred = $q.defer();            	
            		var paramMap = {};
            		paramMap['ObjectApiName'] = selectedObject.ObjectApiName;
            		console.log('paramMap-->>>',paramMap);
            		Visualforce.remoting.Manager.invokeAction(
            			'{!$RemoteAction.SOQLQueryGeneratorCtrl.fetchFields}',
            				paramMap,
            				function(result,event){
            					if(event.status){
            						$scope.$apply(function(){
										$scope.FieldList = result.FieldsInfo;	
										for(var i = 0 ; i<$scope.FieldList.length ; i++){
											console.log('[$scope.FieldList[i]------>>>',$scope.FieldList[i]);
											$scope.fieldsChecked[$scope.FieldList[i].fieldApiName] = $scope.FieldList[i].isChecked;
										}
									});            						   					
            					}            					
            				},
            				{escape:true}            			
            		);
            	};
            	$scope.initObjects = function(){
            		var deferred = $q.defer();            	

            		Visualforce.remoting.Manager.invokeAction(
            			'{!$RemoteAction.SOQLQueryGeneratorCtrl.initObjects}',
            				function(result,event){
            					if(event.status){
            						$scope.$apply(function(){
										$scope.AvailableObjectsList = result.InitObjectInfo;										
									});            						   					
            					}            					
            				},
            				{escape:true}            			
            		);
            	};    

            	$scope.query = 'SELECT ';
            	$scope.objects = '';
            	$scope.fields = '';     	
            	$scope.initObjects();


            	j$(document).ready(function(){
	            	j$( "#sortable1,#sortable2" ).sortable({
	            		items: 'li',
	      				connectWith: "#sortable2",
	      				dropOnEmpty : true,
	      				placeholder: "sortable-placeholder",
	      				cursor:'pointer',	  	      					      					
	      				scroll:true,
	      				receive : function(event,ui){
	      					console.log('item is dropped');
	      					console.log('ui.item--->>>',ui.item);
	      					console.log('angular.element(ui.item).scope()------>>>',angular.element(ui.item).scope());
	      					$scope.$apply(function(){	      							      						
	      						$scope.selectedObject = angular.element(ui.item).scope().$parent.object;	      						     					
		      					ui.item.remove();
		      					$scope.SelectedObjectsList.push($scope.selectedObject);
		      					$scope.SelectedObjectsLis;
		      					$scope.selectedObject={};
		      					$scope.fieldsChecked = {};
		      					console.log('SelectedObjectsList after------>>>'+$scope.SelectedObjectsList);
		      					console.log('SelectedObjectsList after------>>>'+$scope.SelectedObjectsList[0].ObjectApiName);
		      					$scope.objectName = $scope.SelectedObjectsList[0].ObjectApiName;
	      					});	      					
	      				}
	    			}).disableSelection();
	            });
            }]);
			         
            function selTab(elmnt){

                j$(elmnt).parent("li").siblings(".slds-active").removeClass("slds-active");
                j$(elmnt).parent("li").addClass("slds-active");

                // tabindex
                j$(elmnt).parent("li").siblings().children("a").attr("tabindex", -1);
                j$(elmnt).attr("tabindex", 0);

                // aria-selected
                j$(elmnt).parent("li").siblings().children("a").attr("aria-selected", false);
                j$(elmnt).attr("aria-selected", true);

                // hiding previouly selected tab (slds-show/slds-hide)
                j$(elmnt).closest(".slds-tabs--scoped").children("div[role='tabpanel'].slds-show").addClass("slds-hide");
                j$(elmnt).closest(".slds-tabs--scoped").children("div[role='tabpanel'].slds-show").removeClass("slds-show");
                // displaying newly selected tab (slds-show/slds-hide)
                j$(elmnt).closest(".slds-tabs--scoped").children("div[aria-labelledby='"+elmnt.id+"']").addClass("slds-show");
                j$(elmnt).closest(".slds-tabs--scoped").children("div[aria-labelledby='"+elmnt.id+"']").removeClass("slds-hide");
            }
        </script>
    </body>
</apex:page>